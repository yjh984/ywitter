{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Yweet.js","components/YweetOthers.js","components/YweetFactory.js","components/Messaging.js","components/notifyMsg.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","authService2","dbService","firestore","storageService","storage","AuthForm","useState","newAccount","setNewAccount","error","setError","email","setEmail","password","setPassword","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","e","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Yweet","yweetObj","userObj","editing","setEditing","text","newYweet","setNewYweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","YweetOthers","YweetFactory","yweet","setYweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","displayName","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishEvent","currentTarget","result","opacity","backgroundImage","faTimes","getNotificationPermission","Notification","requestPermission","alert","notifyMsg","msg","notification","body","setTimeout","close","Home","yweets","setYweets","useEffect","orderBy","onSnapshot","sn","yweetsArray","docs","map","y","i","document","hasFocus","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","marginTop","signOut","push","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd39cbaa.chunk.js","sourcesContent":["// import * as firebase from \"firebase/app\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASURE_ID\r\n};\r\n// Initialize Firebase\r\n// export default firebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authService=firebase.auth();\r\nexport const authService2=firebase.auth;\r\nexport const dbService=firebase.firestore();\r\nexport const storageService=firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport 'components/AuthForm.css';\r\n\r\nconst AuthForm=()=>{\r\n    const [newAccount, setNewAccount]=useState(true);\r\n    const [error,setError]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    \r\n    const onChange=(event)=>{\r\n        // console.log(event.target.value);\r\n        const {target: {name, value}}=event;\r\n        if (name==='email'){\r\n            setEmail(value);\r\n        }else if(name==='password'){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        try{\r\n            // let data;\r\n            if(newAccount){ // method에 promise가 있어서 async, await를 선언\r\n                await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                // data=await authService.signInWithEmailAndPassword(email,password);\r\n                await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            // console.log(data);\r\n        } catch(e){\r\n            setError(e.message);\r\n            // console.log(error.message);\r\n        }\r\n        \r\n    }\r\n    const toggleAccount=()=>setNewAccount((prev)=>!prev); //difficult to understand??\r\n    \r\n    return(<>\r\n        <form onSubmit={onSubmit} className='container'>\r\n            <input name='email' type='email' placeholder='Email'\r\n                required value={email} onChange={onChange} className='authInput'/>\r\n            <input name='password' type='password' placeholder='password'\r\n                required value={password} onChange={onChange} className='authInput'/>\r\n            <input type='submit' className='authInput authSubmit' value={newAccount? 'Create Account': 'Loge-in'}/>\r\n            {/* {error ? \"Error:\"+{error}:''} */}\r\n            {error && <span className='authError'>{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className='authSwitch'>\r\n            {newAccount ? 'Sign-in':'Create Account'}\r\n        </span>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, authService2 } from 'fbase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport 'routes/Auth.css';\r\n\r\nconst Auth=()=> {\r\n    const onSocialClick=async(e)=>{\r\n        // console.log(e.target.name);\r\n        let provider;\r\n        if(e.target.name==='google'){\r\n            provider=new authService2.GoogleAuthProvider();\r\n        }else if(e.target.name==='github'){\r\n            provider=new authService2.GithubAuthProvider();\r\n        }\r\n        const data=await authService.signInWithPopup(provider);\r\n        // authService2.signInWithPopup() authService2.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div className='authContainer'>\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='3x' style={{marginBottom:30}}/>\r\n            <AuthForm/>\r\n            <div className='authBtns'>\r\n                <button onClick={onSocialClick} name='google' className='authBtn'>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name='github' className='authBtn'>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n    \r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport 'components/Yweet.css'\r\n\r\nconst Yweet=({yweetObj,userObj})=>{\r\n  const [editing,setEditing]=useState(false);\r\n  const [newYweet,setNewYweet]=useState(yweetObj.text);\r\n\r\n  const onDeleteClick=async()=>{\r\n    const ok=window.confirm(\"Are you sure?\");\r\n    if(ok){\r\n      await dbService.doc(`yweets/${yweetObj.id}`).delete();\r\n      await storageService.refFromURL(yweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing=()=>setEditing((prev)=>!prev);\r\n  const onSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    await dbService.doc(`yweets/${yweetObj.id}`).update({\r\n      text:newYweet\r\n    })\r\n    setEditing(false);\r\n  };\r\n  const onChange=(e)=>{\r\n    const {target:{value}}=e;\r\n    setNewYweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className='yweet'>\r\n      {/* {console.log(isOwner)} */}\r\n      {/* {console.log(yweetObj.creatorId)} */}\r\n      {editing? \r\n        <>\r\n         <form onSubmit={onSubmit} className='container yweetEdit'>\r\n            <input type='text' value={newYweet} required autoFocus onChange={onChange} className='formInput'/>\r\n            <input type='submit' value='Update' className='formBtn'/>\r\n          </form>\r\n          {/* <button onClick={toggleEditing}>Cancel</button> */}\r\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\r\n            Cancel\r\n          </span>\r\n        </>\r\n        :\r\n        // {isOwner? (\r\n          <><div>\r\n            {/* {console.log('isOwner')} */}\r\n            {/* {userObj.displayName}\r\n            {' : '} */}\r\n            {yweetObj.text}\r\n            {yweetObj.attachmentUrl&&<img src={yweetObj.attachmentUrl} alt='profile'/>}\r\n          </div>\r\n          {/* {isOwner && <><button onClick={onDeleteClick}>Delete</button>\r\n          <button onClick={toggleEditing}>Edit</button></>} */}\r\n          {<div className='yweet__actions'>\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash}/>\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt}/>\r\n            </span>\r\n          </div>}\r\n          </>\r\n          // )\r\n          // : \"\"}\r\n      }    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Yweet;","import { dbService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport 'components/YweetOthers.css'\r\n\r\nconst YweetOthers=({yweetObj,userObj})=>{\r\n  const [editing,setEditing]=useState(false);\r\n  const [newYweet,setNewYweet]=useState(yweetObj.text);\r\n\r\n  const toggleEditing=()=>setEditing((prev)=>!prev);\r\n  const onSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    await dbService.doc(`yweets/${yweetObj.id}`).update({\r\n      text:newYweet\r\n    })\r\n    setEditing(false);\r\n  };\r\n  const onChange=(e)=>{\r\n    const {target:{value}}=e;\r\n    setNewYweet(value);\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //   notifyMsg(yweetObj.text);\r\n  // },[]);\r\n\r\n  return (\r\n    <div className='yweet__others'>\r\n      {editing? \r\n        <>\r\n         <form onSubmit={onSubmit} className='container yweetEdit'>\r\n            <input type='text' value={newYweet} required autoFocus onChange={onChange} className='formInput'/>\r\n            <input type='submit' value='Update' className='formBtn'/>\r\n          </form>\r\n          {/* <button onClick={toggleEditing}>Cancel</button> */}\r\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\r\n            Cancel\r\n          </span>\r\n        </>\r\n        :\r\n        // {isOwner? (\r\n          <><div>\r\n            {/* {console.log('isOwner')} */}\r\n            {/* {userObj.displayName}\r\n            {' : '} */}\r\n            {yweetObj.text}\r\n            {yweetObj.attachmentUrl&&<img src={yweetObj.attachmentUrl} alt='profile'/>}\r\n          </div>\r\n          </>\r\n      }    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default YweetOthers;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport 'components/YweetFactory.css';\r\n\r\nconst YweetFactory=({userObj})=>{\r\n    const [yweet,setYweet]=useState(\"\");\r\n    const [attachment,setAttachment]=useState(\"\");\r\n    const onSubmit=async(e)=>{\r\n        // e.preventDefault();\r\n        // const {bubble}=e;\r\n        // console.log(e.target[1].value);\r\n        if(yweet===\"\") { return};\r\n        e.preventDefault();\r\n        let attachmentUrl=\"\";\r\n        // console.log(attachment!==\"\");\r\n        // console.log(attachment!==undefined);\r\n        if(attachment!==\"\"){\r\n            const attachmentRef=storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const res=await attachmentRef.putString(attachment,'data_url');\r\n            // console.log(res.ref().getDownloadURL());\r\n            attachmentUrl=await res.ref.getDownloadURL();\r\n            // console.log(attachmentUrl);\r\n        };\r\n        const yweetObj={\r\n            text: userObj.displayName + ' : '+yweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection('yweets').add(yweetObj);\r\n\r\n        // await dbService.collection('yweets').add({\r\n        //     text: yweet,\r\n        //     createdAt: Date.now(),\r\n        //     creatorId: userObj.uid\r\n        // });\r\n\r\n        // getYweets();\r\n        // console.log(yweet);\r\n        setYweet(\"\");\r\n        setAttachment(\"\");\r\n        e.target[1].value=\"\";\r\n        // console.log(yweet);\r\n    };\r\n    const onChange=(e)=>{\r\n    const {target:{value}}=e;\r\n    // console.log(e.target.value);\r\n    setYweet(value);\r\n    };\r\n//   console.log(yweets);\r\n    const onAttachmentChange=(e)=>{\r\n        // const {target:{files}}=e;\r\n        const theFile=e.target.files[0];\r\n        const reader=new FileReader();\r\n        reader.readAsDataURL(theFile);\r\n        reader.onloadend=(finishEvent)=>{\r\n            // console.log(finishEvent.currentTarget.result);\r\n            setAttachment(finishEvent.currentTarget.result);\r\n        };\r\n        // console.log(e.target.files);\r\n        // console.log('file changed...');\r\n    }\r\n    // const onAttachmentClick=(e)=>e.target.value=\"\";\r\n    const onDeleteAttachmentClick=()=>setAttachment(\"\");\r\n    \r\n    return(\r\n    <form onSubmit={onSubmit} className='factoryForm'>\r\n      <div className='factoryInput__container'>\r\n        <input className='factoryInput__input' onChange={onChange} value={yweet} type='text' placeholder=\"What's mind?\" maxLength={120}/>\r\n        <input type='submit' value='&rarr;' className='factoryInput__arrow'/>\r\n      </div>\r\n      <label for='attach-file' className='factoryInput__label'>\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus}/>\r\n      </label>\r\n      <input id='attach-file' type='file' accept='image/*' onChange={onAttachmentChange}\r\n       style={{opacity:0,}}/>\r\n      {attachment && (\r\n        <div className='factoryForm__attachment'>\r\n          <img src={attachment} style={{backgroundImage:attachment}} alt='profile'/>\r\n          <div className='factoryForm__clear' onClick={onDeleteAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes}/>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default YweetFactory;","\r\nconst getNotificationPermission=()=>{\r\n    // 브라우저 지원 여부 체크\r\n    // console.log('messaging!');\r\n    // if (!(\"Notification\" in window)) {\r\n    //     alert(\"데스크톱 알림을 지원하지 않는 브라우저입니다.\");\r\n    // }\r\n    // 데스크탑 알림 권한 요청\r\n    Notification.requestPermission(function (result) {\r\n        // 권한 거절\r\n        if(result === 'denied') {\r\n            alert('알림을 차단하셨습니다.\\n브라우저의 사이트 설정에서 변경하실 수 있습니다.');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\r\nexport default getNotificationPermission;\r\n","\r\nconst notifyMsg=(msg)=>{\r\n    var options = {\r\n        body: msg\r\n    }\r\n    \r\n    // 데스크탑 알림 요청\r\n    var notification = new Notification(\"UserObj\", options);\r\n    \r\n    // 3초뒤 알람 닫기\r\n    setTimeout(function(){\r\n        notification.close();\r\n    }, 3000);\r\n}\r\n\r\nexport default notifyMsg;","import Yweet from 'components/Yweet';\r\nimport YweetOthers from 'components/YweetOthers';\r\nimport YweetFactory from 'components/YweetFactory';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'routes/Home.css';\r\nimport getNotificationPermission from 'components/Messaging';\r\nimport notifyMsg from 'components/notifyMsg';\r\n\r\nconst Home=({userObj})=> {\r\n  const [yweets,setYweets]=useState([]);\r\n\r\n  /*  old version for get database... & forEach(...)\r\n  const getYweets = async ()=>{\r\n    const dbYweets=await dbService.collection('yweets').orderBy('createdAt','desc').get();\r\n    setYweets([]);\r\n    // console.log(\"delete!!\");\r\n    // console.log(yweets);\r\n    // console.log(dbYweets);\r\n    // dbYweets.forEach((doc)=>console.log(doc.data()));\r\n    // let tempYweets=[];\r\n    dbYweets.forEach((doc)=>{\r\n        const yweetObj={\r\n          ...doc.data(),\r\n          id:doc.id\r\n        };\r\n        // tempYweets=[...tempYweets, yweetObj];\r\n        // console.log(tempYweets);\r\n        // tempYweets+=yweetObj;\r\n        setYweets((prev)=>[...prev,yweetObj]);\r\n    });\r\n    // console.log(yweets);\r\n    // setYweets(tempYweets);\r\n  };\r\n  */\r\n\r\n  useEffect(()=>{\r\n    // getYweets();\r\n    getNotificationPermission();\r\n    // notifyMsg('test');\r\n    dbService.collection('yweets').orderBy('createdAt','desc').onSnapshot(sn=>{\r\n      // console.log(sn);\r\n      const yweetsArray=sn.docs.map(doc=>({\r\n        id:doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setYweets(yweetsArray);\r\n    });    \r\n  },[]);\r\n//   useEffect(async()=>{ useEffect의 callback func은 sync...로 async불가\r\n//     const dbYweets=await dbService.collection('yweets').get();\r\n//     // console.log(dbYweets);\r\n//     dbYweets.forEach((doc)=>console.log(doc.data()));\r\n//   },[]);\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <YweetFactory userObj={userObj}/>\r\n      {/* {console.log(yweets)} */}\r\n    <div className='homeDiv'>\r\n      {/* {yweets.map((yweet)=>(\r\n        <Yweet key={yweet.id} yweetObj={yweet} isOwner={yweet.creatorId===userObj.uid}/>\r\n      ))} */}\r\n      {yweets.map(function(y,i){\r\n        // console.log(y.creatorId===userObj.uid);\r\n        // console.log(userObj.uid);\r\n        // let i = 0;        \r\n        // console.log(i);\r\n        if (y.creatorId===userObj.uid){\r\n          // return <Yweet key={y.id} yweetObj={y} isOwner={y.creatorId===userObj.uid}/>\r\n          return <Yweet key={y.id} yweetObj={y} userObj={userObj}/>\r\n        } else{\r\n          // console.log('array'+i);\r\n          if(i===0 && !document.hasFocus()) {\r\n            // notifyMsg(y.text);\r\n            // console.log('i===0 && !focus');\r\n            notifyMsg(y.text);\r\n          }\r\n          // return <YweetOthers key={y.id} yweetObj={y} isOwner={y.creatorId===userObj.uid}/>\r\n          return <YweetOthers key={y.id} yweetObj={y} userObj={userObj}/>\r\n        }\r\n      })}\r\n      {yweets.map( function(y){\r\n        if (Date.now()>y.createdAt+604800000 ){\r\n          // console.log('too old');\r\n          dbService.doc(`yweets/${y.id}`).delete();\r\n          storageService.refFromURL(y.attachmentUrl).delete();\r\n        }\r\n        // return console.log(y.createdAt);\r\n      })\r\n      }\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;","// import { authService, dbService } from 'fbase';\r\n// import React, { useEffect, useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport 'routes/Profile.css';\r\n\r\nconst Profile=({refreshUser,userObj})=> {\r\n  const history=useHistory();\r\n  const [newDisplayName,setNewDisplayName]=useState(userObj.displayName);\r\n  const onLogOutClick=()=>{\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n  // const getMyYweets=async()=>{\r\n  //   console.log(userObj.uid);\r\n  //   const yweets=await dbService\r\n  //     .collection('yweets')\r\n  //     .where('creatorId','==',userObj.uid)\r\n  //     .orderBy('createdAt','desc')\r\n  //     .get();\r\n  //   console.log(yweets.docs.map((doc)=>doc.data()));\r\n  // };\r\n  // useEffect(()=>{\r\n  //   getMyYweets();\r\n  // },[]);\r\n  const onChange=(e)=>{\r\n    setNewDisplayName(e.target.value);\r\n  }\r\n  const onSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    // console.log(e);\r\n    if(userObj.displayName!==newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      // history.push('/');\r\n      refreshUser();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='container'>\r\n      <form onSubmit={onSubmit} className='profileForm'>\r\n        <input type='text' value={newDisplayName} placeholder='Display Name' onChange={onChange}\r\n          autoFocus className='formInput'/>\r\n        <input type='submit' value='Update Profile'\r\n          className='formBtn' style={{marginTop:10}}/>\r\n      </form>\r\n      <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>Log Out</span>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'components/Navigation.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation=({userObj})=>(\r\n  <nav>\r\n    <ul className='navUL'>\r\n      <li>\r\n        <Link to ='/' className='navRootLink'>\r\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x'/>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to ='/profile' className='navProfileLink'>\r\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x'/>\r\n          <span style={{marginTop:10}}>\r\n            {userObj.displayName ? `${userObj.displayName}'s Profile`:'Profile'}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\nimport 'components/Router.css';\r\n\r\nconst AppRouter =({refreshUser, isLoggedIn, userObj})=>{\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn? (\r\n                    <div className='routerDiv'>\r\n                    <Route exact path='/'>\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path='/profile'>\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </div>\r\n                    ):(\r\n                    <Route exact path='/'>\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","// import logo from './logo.svg';\n// import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from 'fbase';\n\n\nfunction App() {\n  // console.log('auth:'+authService.currentUser);\n  // const [isLoggedIn, setLoggedIn]=useState(true);\n  const [init,setInit]=useState(false);\n  // const [isLoggedIn, setLoggedIn]=useState(false);\n  const [userObj,setUserObj]=useState(null);\n  \n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      // console.log(user));\n      if(user){\n        // setLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args)=>user.updateProfile(args),\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n      });\n    },[]);\n  const refreshUser=()=>{\n    // console.log(userObj.displayName);\n    // setUserObj(userObj); // too big object to recognize it in React..\n    const user=authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args)=>user.updateProfile(args),\n    });\n  }\n\n return (\n    <>\n      {/* {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}/> :'Initializing...'} */}\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> :'Initializing...'}\n      <footer>&copy; Ywitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\n// import reportWebVitals from './reportWebVitals';\n// import Firebase from 'fbase';\n\n// console.log(Firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}